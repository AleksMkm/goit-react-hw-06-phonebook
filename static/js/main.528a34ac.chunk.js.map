{"version":3,"sources":["Components/ContactList/Contact.module.css","Components/Filter/Filter.module.css","Components/Section/Section.module.css","Components/Container/Container.module.css","Components/IconButton/IconButton.module.css","Components/ContactList/ContactList.module.css","redux/types.js","redux/reducer.js","redux/store.js","Components/Container/Container.js","Components/IconButton/IconButton.js","Components/ContactList/Contact.js","redux/selectors.js","redux/actions.js","Components/ContactList/ContactList.js","Components/ContactForm/ContactForm.js","Components/Section/Section.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","types","FILTER_CHANGE","CONTACT_ADD","CONTACT_DELETE","rootReducer","combineReducers","contacts","state","type","payload","filter","contact","id","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","store","createStore","composeWithDevTools","persistor","persistStore","Container","children","className","styles","container","IconButton","onClick","allyProps","iconBtn","defaultProps","Contact","name","phone","deleteHandler","icon","aria-label","getContacts","getFilter","actions","addContact","number","uniqueId","deleteContact","changeFilter","value","ContactList","useSelector","dispatch","useDispatch","displayedContacts","trim","normalizedFilter","toLowerCase","includes","filteredContacts","contactList","map","ContactForm","useForm","register","handleSubmit","errors","reset","btn","useRef","form","onSubmit","data","find","alert","current","blur","label","ref","required","minLength","maxLength","pattern","addField","placeholder","error","Section","title","section","Filter","searchField","onChange","e","target","App","length","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.528a34ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__1dVZK\",\"icon\":\"Contact_icon__1ZZvd\",\"name\":\"Contact_name__3NYKL\",\"phone\":\"Contact_phone__Wo9bu\",\"btn\":\"Contact_btn__2aFN6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__3dD5N\",\"title\":\"Filter_title__2VhkD\",\"searchField\":\"Filter_searchField__JvstB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2CD9M\",\"title\":\"Section_title__1EphG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1wnX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconBtn\":\"IconButton_iconBtn__2fl_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2HhRW\"};","const types = {\n  FILTER_CHANGE: 'filter/change',\n  CONTACT_ADD: 'contact/add',\n  CONTACT_DELETE: 'contact/delete',\n};\n\nexport default types;\n","import { combineReducers } from 'redux';\nimport types from './types';\n\nconst contacts = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.CONTACT_ADD:\n      return [...state, payload];\n\n    case types.CONTACT_DELETE:\n      return state.filter(contact => contact.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.FILTER_CHANGE:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  contacts,\n  filter,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducer';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(persistedReducer, composeWithDevTools());\n\nexport const persistor = persistStore(store);\n","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './IconButton.module.css';\n\nfunction IconButton({ children, onClick, ...allyProps }) {\n  return (\n    <button\n      type=\"button\"\n      className={styles.iconBtn}\n      onClick={onClick}\n      {...allyProps}\n    >\n      {children}\n    </button>\n  );\n}\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nIconButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string.isRequired,\n};\n\nexport default IconButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport styles from './Contact.module.css';\nimport IconButton from '../IconButton/';\n\nfunction Contact({ id, name, phone, deleteHandler }) {\n  return (\n    <li key={id} className={styles.contact}>\n      <span className={styles.name}>\n        <AccountCircleIcon className={styles.icon} />\n        {name}\n      </span>\n\n      <span className={styles.phone}>\n        <PhoneIphoneIcon className={styles.icon} />\n        {phone}\n      </span>\n\n      <IconButton onClick={deleteHandler} aria-label=\"delete contact\">\n        <DeleteIcon />\n      </IconButton>\n    </li>\n  );\n}\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  deleteHandler: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;\n","import types from './types';\nimport { v4 as uniqueId } from 'uuid';\n\nconst addContact = (name, number) => ({\n  type: types.CONTACT_ADD,\n  payload: {\n    id: uniqueId(),\n    name,\n    number,\n  },\n});\n\nconst deleteContact = id => ({\n  type: types.CONTACT_DELETE,\n  payload: id,\n});\n\nconst changeFilter = value => ({\n  type: types.FILTER_CHANGE,\n  payload: value,\n});\n\nconst actions = { addContact, deleteContact, changeFilter };\n\nexport default actions;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Contact from './Contact';\nimport styles from './ContactList.module.css';\nimport { getContacts, getFilter } from '../../redux/selectors';\nimport actions from '../../redux/actions';\n\nfunction ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const displayedContacts = filter.trim() ? filteredContacts() : contacts;\n\n  return (\n    <ul className={styles.contactList}>\n      {displayedContacts.map(contact =>\n        Contact({\n          id: contact.id,\n          name: contact.name,\n          phone: contact.number,\n          deleteHandler: () => dispatch(actions.deleteContact(contact.id)),\n        }),\n      )}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import React, { useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { getContacts } from '../../redux/selectors';\nimport actions from '../../redux/actions';\n\nfunction ContactForm() {\n  const { register, handleSubmit, errors, reset } = useForm();\n  const btn = useRef();\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n      )\n    ) {\n      alert(`${data.name} is already in Phonebook`);\n      return;\n    }\n    dispatch(actions.addContact(data.name.trim(), data.number.trim()));\n    btn.current.blur();\n    reset({});\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\n      <label className={styles.label}>\n        <input\n          ref={register({\n            required: true,\n            minLength: 3,\n            maxLength: 18,\n            pattern: /^[A-Za-z]+([ A-Za-z]+)*$/,\n          })}\n          className={styles.addField}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"name\"\n        />\n        {errors.name && errors.name.type === 'required' && (\n          <p className={styles.error}>Name is required</p>\n        )}\n        {errors.name && errors.name.type === 'minLength' && (\n          <p className={styles.error}>\n            Name is too short. Minimum 3 characters required.\n          </p>\n        )}\n        {errors.name && errors.name.type === 'maxLength' && (\n          <p className={styles.error}>\n            Name is too long. Maximum 18 characters allowed.\n          </p>\n        )}\n        {errors.name && errors.name.type === 'pattern' && (\n          <p className={styles.error}>Name can contain only english letters.</p>\n        )}\n      </label>\n      <label className={styles.label}>\n        <input\n          ref={register({ required: true, pattern: /^\\d+$/ })}\n          className={styles.addField}\n          type=\"text\"\n          name=\"number\"\n          placeholder=\"xxxx-xx-xx\"\n        />\n        {errors.number && errors.number.type === 'required' && (\n          <p className={styles.error}>Number is required</p>\n        )}\n        {errors.number && errors.number.type === 'pattern' && (\n          <p className={styles.error}>\n            Phone number should consist only from numbers.\n          </p>\n        )}\n      </label>\n      <button ref={btn} className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport styles from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      <p className={styles.title}>{title}</p>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './Filter.module.css';\nimport { getFilter } from '../../redux/selectors';\nimport actions from '../../redux/actions';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <form className={styles.form}>\n      <label>\n        <span className={styles.title}>Find contacts by name</span>\n        <input\n          className={styles.searchField}\n          type=\"text\"\n          value={filter}\n          onChange={e => dispatch(actions.changeFilter(e.target.value))}\n        />\n      </label>\n    </form>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Container from './Components/Container';\nimport ContactList from './Components/ContactList';\nimport ContactForm from './Components/ContactForm';\nimport Section from './Components/Section';\nimport Filter from './Components/Filter';\nimport { getContacts } from './redux/selectors';\n\nfunction App() {\n  const contacts = useSelector(getContacts);\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length ? (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <div>Oops. no contacts here! Let's add some data!</div>\n        )}\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1GTZJ\",\"addField\":\"ContactForm_addField__mumpN\",\"btn\":\"ContactForm_btn__OIYM5\",\"label\":\"ContactForm_label__2lgtc\",\"error\":\"ContactForm_error__2vX4t\"};"],"sourceRoot":""}